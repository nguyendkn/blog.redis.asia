@page "/post/{slug}"
@using Blog.Domain.DbContexts
@using Blog.Domain.Aggregates.PostAggregate

<PageTitle>@Post?.Title</PageTitle>

<div>
    <div class="container px-8 mx-auto xl:px-5  max-w-screen-lg py-5 lg:py-8 !pt-0">
        <div class="max-w-screen-md mx-auto ">
            <div class="flex justify-center">
                <div class="flex gap-3">
                    @{
                        var tags = Post?.Tags;
                    }
                    @if (tags != null && tags.Any())
                    {
                        foreach (var item in tags)
                        {
                            <a href="#">
                                <span class="inline-block text-xs font-medium tracking-wider uppercase mt-5 text-purple-600">@item</span>
                            </a>
                        }
                    }
                </div>
            </div>
            <h1 class="mt-2 mb-3 text-3xl font-semibold tracking-tight text-center lg:leading-snug text-brand-primary lg:text-4xl dark:text-white">@Post?.Title</h1>
            <div class="flex justify-center mt-3 space-x-3 text-gray-500 ">
                <div class="flex items-center gap-3">
                    <div class="relative flex-shrink-0 w-10 h-10">
                        <a href="https://www.facebook.com/profile.php?id=100084062615349">
                            <img alt="Dao Khoi Nguyen" sizes="40px" srcset="./images/Avatar.jpg" src="./images/Avatar.jpg" decoding="async" data-nimg="fill" class="rounded-full object-cover" loading="lazy" style="position: absolute; height: 100%; width: 100%; inset: 0px; color: transparent;">
                        </a>
                    </div>
                    <div>
                        <p class="text-gray-800 dark:text-gray-400">
                            <a href="https://www.facebook.com/profile.php?id=100084062615349">Khoi Nguyen</a>
                        </p>
                        <div class="flex items-center space-x-2 text-sm">
                            <time class="text-gray-500 dark:text-gray-400" datetime="@Post?.CreatedTime">@Post?.CreatedTime.ToString("D")</time>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="relative z-0 max-w-screen-lg mx-auto overflow-hidden lg:rounded-lg aspect-video">
        <img alt="Thumbnail" sizes="100vw" srcset="@Post?.Cover" src="@Post?.Cover" decoding="async" data-nimg="fill" class="object-cover" loading="eager" style="position: absolute; height: 100%; width: 100%; inset: 0px; color: transparent;">
    </div>
    <div class="container px-8 mx-auto xl:px-5  max-w-screen-lg py-5 lg:py-8">
        <article class="max-w-screen-md mx-auto ">
            <div class="mx-auto my-3 prose dark:prose-invert prose-a:text-blue-600">
                @((MarkupString)(Post?.Content ?? string.Empty))
            </div>
            <div class="flex justify-center mt-7 mb-7">
                <a class="px-5 py-2 text-sm text-blue-600 rounded-full dark:text-blue-500 bg-brand-secondary/20 " href="/">‚Üê View all posts</a>
            </div>
            <div class="px-8 py-8 mt-3 text-gray-500 rounded-2xl bg-gray-50 dark:bg-gray-900 dark:text-gray-400">
                <div class="flex flex-wrap items-start sm:space-x-6 sm:flex-nowrap">
                    <div class="relative flex-shrink-0 w-24 h-24 mt-1 ">
                        <a href="https://www.facebook.com/profile.php?id=100084062615349">
                            <img alt="Dao Khoi Nguyen" sizes="96px" srcset="./images/Avatar.jpg" src="./images/Avatar.jpg" decoding="async" data-nimg="fill" class="rounded-full object-cover" loading="lazy" style="position: absolute; height: 100%; width: 100%; inset: 0px; color: transparent;">
                        </a>
                    </div>
                    <div>
                        <div class="mb-3">
                            <h3 class="text-lg font-medium text-gray-800 dark:text-gray-300">About Khoi Nguyen</h3>
                        </div>
                        <div>
                            <p>Khoi Nguyen is a Technical Leader and Solution Architecture at <a class="font-bold" href="https://novaon.asia/" rel="noopener" target="_blank">Novaon Group</a>, as well as being a founder of AioCore and the content management system of redis blog.</p>
                        </div>
                        <div class="mt-3">
                            <a class="py-2 text-sm text-blue-600 rounded-full dark:text-blue-500 bg-brand-secondary/20 " href="https://www.facebook.com/profile.php?id=100084062615349">View Profile</a>
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>
</div>

@code {

    [Parameter]
    public string Slug { get; set; } = default!;

    [Inject]
    public BlogContext Context { get; set; } = default!;

    private Post? Post { get; set; } = new();

    protected override async Task OnParametersSetAsync()
    {
        await FetchAsync();
        await base.OnParametersSetAsync();
    }

    private async Task FetchAsync()
    {
        Post = await Context.Posts.FirstOrDefaultAsync(x => x.Slug.Equals(Slug));
    }

}